#!/bin/sh

# Copyright (C) 2006  Joey Hess  <joeyh@debian.org>
# Copyright (C) 2006, 2007, 2008, 2009  Martin Michlmayr <tbm@cyrius.com>
# Copyright (C) 2009, 2010 Canonical Ltd
# Copyright (C) 2010, 2011 Genesi USA, Inc. (stripped down for Efika MX)

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301,
# USA.

set -e

error() {
	echo "$@" >&2
	exit 1
}

check_subarch() {
	if [ -n "$subarch" ] && [ "$subarch" != "$1" ]; then
		echo "Kernel $kfile does not match your system" >&2
		echo "$1, therefore not preparing it." >&2
		exit 0
	fi
}

# list of functions to call on cleanup
cleanup_funcs=""
cleanup() {
	for f in $cleanup_funcs; do
		$f
	done
}

efikamx_prep_kernel() {
	tmp=$(tempfile)
	ukfile=/boot/uImage-${kvers}
	uifile=/boot/uInitrd-${kvers}
	bssrc=/boot/boot.script
	bstmp=$tmp.boot.script
	bsdst=/boot/boot.scr
	loadaddr=0x90008000

	if [ ! -e "/dev/root" ]; then
		error "Could not find root device. Please add a symlink from your root device to /dev/root ."
	fi
	rootfs=$(readlink -f /dev/root)

	printf "Generating kernel u-boot image... " >&2
	mkimage -A arm -O linux -T kernel -C none -a ${loadaddr} \
		-e ${loadaddr} -n "${kdesc}" -d "${kfile}" "$tmp.uImage" >&2 1>/dev/null
	echo "done." >&2

	# back up an already existing kernel if its there, before we put
	# the newly generated image in its place
	if [ -e "${ukfile}" ]; then
		mv "${ukfile}" "${ukfile}.bak"
	fi
	mv "$tmp.uImage" "${ukfile}"

	# if there's an initrd.img to generate, do it, if not, ignore..
	if [ -e "${ifile}" ]; then
		printf "Generating initrd u-boot image... " >&2
		mkimage -A arm -O linux -T ramdisk -C none -a 0x0 \
			-e 0x0 -n "${idesc}" -d "${ifile}" "$tmp.uInitrd" >&2 1>/dev/null
		echo "done." >&2

		if [ -e "${uifile}" ]; then
			mv "${uifile}" "${uifile}.bak"
		fi
		mv "$tmp.uInitrd" "${uifile}"
		rm -f "$tmp.uInitrd"
	fi

	# only create a boot.scr if boot.script source exists, back it up, and replace
	# the %VARIABLES% with what we know about the kernel from the script call..
	if [ -e "${bssrc}" ]; then
		if [ -e "${bsdst}" ]; then
			cp "${bsdst}" "${bsdst}.bak"
		fi
		cp "${bssrc}" "$tmp.boot.script"
		printf "Generating u-boot configuration from /boot/boot.script... " >&2
		eval "sed -i'.bak' -e's,%KERNELVERSION%,$kvers,g' $tmp.boot.script"
		eval "sed -i'.bak' -e's,%ROOTPARTITION%,$rootfs,g' $tmp.boot.script"

		mkimage -A arm -T script -C none -n "Ubuntu boot script" -d "$tmp.boot.script" \
			"${bsdst}" >&2 1>/dev/null
		echo "done." >&2
		rm -f "$tmp.boot.script" "$tmp.boot.script.bak"
	fi
	rm -f "$tmp"
}

trap "cleanup" 0 HUP INT QUIT KILL SEGV PIPE TERM

machine=$(grep "^Hardware" /proc/cpuinfo | sed 's/Hardware\s*:\s*//')
running_subarch=$(uname -r | sed -e 's/.*-//')

if [ "x$1" = "x--supported" ]; then
	case "$machine" in
		"Genesi Efika MX (Smartbook)")		exit 0 ;;
		"Genesi Efika MX (Smarttop)")		exit 0 ;;
		*)
			# we're supported if we have a generic fallback
			case "$running_subarch" in
				"efikamx" ) exit 0 ;;
			esac
		exit 1
		;;
	esac
fi

if [ -n "$1" ]; then
	kvers="$1"
else
	kvers=$(uname -r)
fi
kfile=/boot/vmlinuz-$kvers
ifile=/boot/initrd.img-$kvers
desc="Kernel $1"
idesc="Ramdisk $1"

if [ ! -e $kfile ]; then
	error "Can't find $kfile"
fi

if [ ! -e $ifile ]; then
	echo "Warning: Can't find $ifile . Will generate ramdisk less boot." >&2
fi

# Extract the subarchitecture from the kernel name
if [ -L "$kfile" ]; then
	kfile=$(readlink -e "$kfile")
fi
subarch=$(echo "$kfile" | sed -e 's/.*-//')

case "$machine" in
	"Genesi Efika MX (Smartbook)" | "Genesi Efika MX (Smarttop)")
		check_subarch "efikamx"
		efikamx_prep_kernel
	;;
	*)
		error "Unsupported platform."
	;;
esac
